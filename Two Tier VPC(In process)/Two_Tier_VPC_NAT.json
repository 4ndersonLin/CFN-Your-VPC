{
	"AWSTemplateFormatVersion" : "2010-09-09",

	"Description" : "There is a 2-tier VPC with NAT Gateway.***NOTICE*** NAT Gateway not available in  SÃ£o Paulo Region.(2016/09/25)",

	"Metadata" : {
		"AWS::CloudFormation::Interface" : {
			"ParameterGroups" : [{
					"Label" : {
						"default" : "Network Configuration"
					},
					"Parameters" : [
						"VPCCIDR",
						"DMZSubnet1CIDR",
						"DMZSubnet2CIDR",
						"TrustZoneSubnet1CIDR",
						"TrustZoneSubnet2CIDR"
					]
				}
			],
			"ParameterLabels" : {
				"VPCCIDR" : {
					"default" : "VPC Size"
				},
				"DMZSubnet1CIDR" : {
					"default" : "DMZ Subnet Size(AZ1)"
				},
				"DMZSubnet2CIDR" : {
					"default" : "DMZ Subnet Size(AZ2)"
				},
				"TrustZoneSubnet1CIDR" : {
					"default" : "Trust Zone Subnet Size(AZ1)"
				},
				"TrustZoneSubnet2CIDR" : {
					"default" : "Trust Zone Subnet Size(AZ2)"
				}
			}
		}
	},
	"Parameters" : {
		"VPCCIDR" : {
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default" : "10.0.0.0/16",
			"Description" : "CIDR Block for the VPC",
			"Type" : "String"
		},
		"DMZSubnet1CIDR" : {
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default" : "10.0.0.0/24",
			"Description" : "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1",
			"Type" : "String"
		},
		"DMZSubnet2CIDR" : {
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default" : "10.0.1.0/24",
			"Description" : "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2",
			"Type" : "String"
		},
		"TrustZoneSubnet1CIDR" : {
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default" : "10.0.2.0/24",
			"Description" : "CIDR block for the private trust zone subnet 1 located in Availability Zone 1.",
			"Type" : "String"
		},
		"TrustZoneSubnet2CIDR" : {
			"AllowedPattern" : "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
			"ConstraintDescription" : "CIDR block parameter must be in the form x.x.x.x/16-28",
			"Default" : "10.0.3.0/24",
			"Description" : "CIDR block for the private trust zone subnet 2 located in Availability Zone 2.",
			"Type" : "String"
		}
	},

	"Resources" : {

		"VPC" : {
			"Type" : "AWS::EC2::VPC",
			"Properties" : {
				"CidrBlock" : {
					"Ref" : "VPCCIDR"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}
				]
			}
		},

		"DMZSubnet1" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"CidrBlock" : {
					"Ref" : "DMZSubnet1CIDR"
				},
				"AvailabilityZone" : {
					"Fn::Select" : [
						"0", {
							"Fn::GetAZs" : ""
						}
					]
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : "DMZ subnet 1"
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}, {
						"Key" : "Zone",
						"Value" : "DMZ"
					}
				]
			}
		},

		"DMZSubnet2" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"CidrBlock" : {
					"Ref" : "DMZSubnet2CIDR"
				},
				"AvailabilityZone" : {
					"Fn::Select" : [
						"1", {
							"Fn::GetAZs" : ""
						}
					]
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : "DMZ subnet 2"
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}, {
						"Key" : "Zone",
						"Value" : "DMZ"
					}
				]
			}
		},

		"TrustZoneSubnet1" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"CidrBlock" : {
					"Ref" : "TrustZoneSubnet1CIDR"
				},
				"AvailabilityZone" : {
					"Fn::Select" : [
						"0", {
							"Fn::GetAZs" : ""
						}
					]
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : "Trust Zone subnet 1"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"TrustZoneSubnet2" : {
			"Type" : "AWS::EC2::Subnet",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"CidrBlock" : {
					"Ref" : "TrustZoneSubnet2CIDR"
				},
				"AvailabilityZone" : {
					"Fn::Select" : [
						"1", {
							"Fn::GetAZs" : ""
						}
					]
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : "Trust Zone subnet 2"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"InternetGateway" : {
			"Type" : "AWS::EC2::InternetGateway",
			"Properties" : {
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}
				]
			}
		},

		"AttachGateway" : {
			"Type" : "AWS::EC2::VPCGatewayAttachment",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"InternetGatewayId" : {
					"Ref" : "InternetGateway"
				}
			}
		},

		"DMZRouteTable" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}, {
						"Key" : "Zone",
						"Value" : "DMZ"
					}
				]
			}
		},

		"TrustZoneRouteTable1" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"TrustZoneRouteTable2" : {
			"Type" : "AWS::EC2::RouteTable",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"DMZRoute" : {
			"Type" : "AWS::EC2::Route",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"RouteTableId" : {
					"Ref" : "DMZRouteTable"
				},
				"DestinationCidrBlock" : "0.0.0.0/0",
				"GatewayId" : {
					"Ref" : "InternetGateway"
				}
			}
		},

		"DMZSubnet1RouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "DMZSubnet1"
				},
				"RouteTableId" : {
					"Ref" : "DMZRouteTable"
				}
			}
		},

		"DMZSubnet2RouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "DMZSubnet2"
				},
				"RouteTableId" : {
					"Ref" : "DMZRouteTable"
				}
			}
		},

		"TrustZoneSubnet1RouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "TrustZoneSubnet1"
				},
				"RouteTableId" : {
					"Ref" : "TrustZoneRouteTable1"
				}
			}
		},

		"TrustZoneSubnet2RouteTableAssociation" : {
			"Type" : "AWS::EC2::SubnetRouteTableAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "TrustZoneSubnet2"
				},
				"RouteTableId" : {
					"Ref" : "TrustZoneRouteTable2"
				}
			}
		},

		"DMZSubnetNetworkAcl" : {
			"Type" : "AWS::EC2::NetworkAcl",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}, {
						"Key" : "Zone",
						"Value" : "DMZ"
					}
				]
			}
		},

		"TrustZoneSubnetNetworkAcl" : {
			"Type" : "AWS::EC2::NetworkAcl",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"Tags" : [{
						"Key" : "Name",
						"Value" : {
							"Ref" : "AWS::StackName"
						}
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"DMZInboundSSHNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "110",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "22",
					"To" : "22"
				}
			}
		},

		"DMZOutBoundSSHNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "110",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "22",
					"To" : "22"
				}
			}
		},

		"DMZInboundHttpNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "120",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "80",
					"To" : "80"
				}
			}
		},

		"DMZOutBoundHttpNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "120",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "80",
					"To" : "80"
				}
			}
		},

		"DMZInboundHttpsNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "130",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "443",
					"To" : "443"
				}
			}
		},

		"DMZOutBoundHttpsNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "130",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "443",
					"To" : "443"
				}
			}
		},

		"DMZInboundHighNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "140",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "1024",
					"To" : "65535"
				}
			}
		},

		"DMZOutBoundHighNetworkAclEntry" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				},
				"RuleNumber" : "140",
				"Protocol" : "6",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : "0.0.0.0/0",
				"PortRange" : {
					"From" : "1024",
					"To" : "65535"
				}
			}
		},

		"DMZSubnet1NetworkAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "DMZSubnet1"
				},
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				}
			}
		},

		"DMZSubnet2NetworkAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "DMZSubnet2"
				},
				"NetworkAclId" : {
					"Ref" : "DMZSubnetNetworkAcl"
				}
			}
		},

		"TrustZoneInboundAllNetworkAclEntry1" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "TrustZoneSubnetNetworkAcl"
				},
				"RuleNumber" : "110",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "false",
				"CidrBlock" : {
					"Ref" : "VPCCIDR"
				}
			}
		},

		"TrustZoneOutBoundAllNetworkAclEntry1" : {
			"Type" : "AWS::EC2::NetworkAclEntry",
			"Properties" : {
				"NetworkAclId" : {
					"Ref" : "TrustZoneSubnetNetworkAcl"
				},
				"RuleNumber" : "110",
				"Protocol" : "-1",
				"RuleAction" : "allow",
				"Egress" : "true",
				"CidrBlock" : {
					"Ref" : "VPCCIDR"
				}
			}
		},

		"TrustZoneSubnet1NetworkAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "TrustZoneSubnet1"
				},
				"NetworkAclId" : {
					"Ref" : "TrustZoneSubnetNetworkAcl"
				}
			}
		},

		"TrustZoneSubnet2NetworkAclAssociation" : {
			"Type" : "AWS::EC2::SubnetNetworkAclAssociation",
			"Properties" : {
				"SubnetId" : {
					"Ref" : "TrustZoneSubnet2"
				},
				"NetworkAclId" : {
					"Ref" : "TrustZoneSubnetNetworkAcl"
				}
			}
		},

		"NATGWEIP1" : {
			"Type" : "AWS::EC2::EIP",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"Domain" : "vpc"
			}
		},

		"NATGWEIP2" : {
			"Type" : "AWS::EC2::EIP",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"Domain" : "vpc"
			}
		},

		"NATGateway1" : {
			"Type" : "AWS::EC2::NatGateway",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"AllocationId" : {
					"Fn::GetAtt" : ["NATGWEIP1", "AllocationId"]
				},
				"SubnetId" : {
					"Ref" : "DMZSubnet1"
				}
			}
		},

		"NATGateway2" : {
			"Type" : "AWS::EC2::NatGateway",
			"DependsOn" : "AttachGateway",
			"Properties" : {
				"AllocationId" : {
					"Fn::GetAtt" : ["NATGWEIP2", "AllocationId"]
				},
				"SubnetId" : {
					"Ref" : "DMZSubnet2"
				}
			}
		},

		"NATGWRoute1" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : {
					"Ref" : "TrustZoneRouteTable1"
				},
				"DestinationCidrBlock" : "0.0.0.0/0",
				"NatGatewayId" : {
					"Ref" : "NATGateway1"
				}
			}
		},

		"NATGWRoute2" : {
			"Type" : "AWS::EC2::Route",
			"Properties" : {
				"RouteTableId" : {
					"Ref" : "TrustZoneRouteTable2"
				},
				"DestinationCidrBlock" : "0.0.0.0/0",
				"NatGatewayId" : {
					"Ref" : "NATGateway2"
				}
			}
		},

		"ELBSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow web access via port 80 and 443 from anywhere",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "80",
						"ToPort" : "80",
						"CidrIp" : "0.0.0.0/0"
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "443",
						"ToPort" : "443",
						"CidrIp" : "0.0.0.0/0"
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "ELB Web Default"
					}, {
						"Key" : "Network",
						"Value" : "Public"
					}, {
						"Key" : "Zone",
						"Value" : "DMZ"
					}
				]
			}
		},

		"WebSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow web applicaiton server access via port 80 and 443 from DMZ",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "80",
						"ToPort" : "80",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "443",
						"ToPort" : "443",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "80",
						"ToPort" : "80",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "443",
						"ToPort" : "443",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "Web Application"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Trust"
					}
				]
			}
		},

		"MySQLSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow MySQL access via port 3306",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "3306",
						"ToPort" : "3306",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "3306",
						"ToPort" : "3306",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "MySQL Default Port"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Database"
					}
				]
			}
		},

		"PostgreSQLSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow PostgreSQL access via port 5432",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "5432",
						"ToPort" : "5432",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "5432",
						"ToPort" : "5432",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "PostgreSQL Default Port"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Database"
					}
				]
			}
		},

		"OracleSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow Oracle access via port 1521",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "1521",
						"ToPort" : "1521",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "1521",
						"ToPort" : "1521",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "Oracle Default Port"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Database"
					}
				]
			}
		},

		"MSSQLSecurityGroup" : {
			"Type" : "AWS::EC2::SecurityGroup",
			"Properties" : {
				"VpcId" : {
					"Ref" : "VPC"
				},
				"GroupDescription" : "Allow MSSQL access via port 1433",
				"SecurityGroupIngress" : [{
						"IpProtocol" : "tcp",
						"FromPort" : "1433",
						"ToPort" : "1433",
						"CidrIp" : {
							"Ref" : "DMZSubnet1CIDR"
						}
					}, {
						"IpProtocol" : "tcp",
						"FromPort" : "1433",
						"ToPort" : "1433",
						"CidrIp" : {
							"Ref" : "DMZSubnet2CIDR"
						}
					}
				],
				"Tags" : [{
						"Key" : "Name",
						"Value" : "MSSQL Default"
					}, {
						"Key" : "Network",
						"Value" : "Private"
					}, {
						"Key" : "Zone",
						"Value" : "Database"
					}
				]
			}
		}
	},

	"Outputs" : {
		"VPCID" : {
			"Description" : "The VPC ID",
			"Value" : {
				"Ref" : "VPC"
			}
		},

		"DMZ1ID" : {
			"Description" : "The DMZ Subnet 1 ID",
			"Value" : {
				"Ref" : "DMZSubnet1"
			}
		},

		"DMZ2ID" : {
			"Description" : "The DMZ Subnet 2 ID",
			"Value" : {
				"Ref" : "DMZSubnet2"
			}
		},

		"TrustZone1ID" : {
			"Description" : "The Trust Zone Subnet 1 ID",
			"Value" : {
				"Ref" : "TrustZoneSubnet1"
			}
		},

		"TrustZone2ID" : {
			"Description" : "The Trust Zone Subnet 2 ID",
			"Value" : {
				"Ref" : "TrustZoneSubnet2"
			}
		},

		"NATGWIP1" : {
			"Description" : "The NAT Gateway 1 IP",
			"Value" : {
				"Ref" : "NATGWEIP1"
			}
		},

		"NATGWIP2" : {
			"Description" : "The NAT Gateway 2 IP",
			"Value" : {
				"Ref" : "NATGWEIP2"
			}
		}
	}
}
